"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
exports.__esModule = true;
var ethers_1 = require("ethers");
{
    AggregatorV3Interface,
        AggregatorV3InterfaceInterface,
    ;
}
from;
"../AggregatorV3Interface";
var _abi = [
    {
        inputs: [],
        name: "decimals",
        outputs: [
            {
                internalType: "uint8",
                name: "",
                type: "uint8"
            },
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [],
        name: "description",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string"
            },
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "uint80",
                name: "_roundId",
                type: "uint80"
            },
        ],
        name: "getRoundData",
        outputs: [
            {
                internalType: "uint80",
                name: "roundId",
                type: "uint80"
            },
            {
                internalType: "int256",
                name: "answer",
                type: "int256"
            },
            {
                internalType: "uint256",
                name: "startedAt",
                type: "uint256"
            },
            {
                internalType: "uint256",
                name: "updatedAt",
                type: "uint256"
            },
            {
                internalType: "uint80",
                name: "answeredInRound",
                type: "uint80"
            },
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [],
        name: "latestRoundData",
        outputs: [
            {
                internalType: "uint80",
                name: "roundId",
                type: "uint80"
            },
            {
                internalType: "int256",
                name: "answer",
                type: "int256"
            },
            {
                internalType: "uint256",
                name: "startedAt",
                type: "uint256"
            },
            {
                internalType: "uint256",
                name: "updatedAt",
                type: "uint256"
            },
            {
                internalType: "uint80",
                name: "answeredInRound",
                type: "uint80"
            },
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [],
        name: "version",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256"
            },
        ],
        stateMutability: "view",
        type: "function"
    },
];
var AggregatorV3Interface__factory = (function () {
    function AggregatorV3Interface__factory() {
    }
    AggregatorV3Interface__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    AggregatorV3Interface__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    AggregatorV3Interface__factory.abi = _abi;
    return AggregatorV3Interface__factory;
}());
exports.AggregatorV3Interface__factory = AggregatorV3Interface__factory;
