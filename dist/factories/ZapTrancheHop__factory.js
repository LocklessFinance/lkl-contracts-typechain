"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ZapTrancheHop__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "__trancheFactory",
                type: "address",
            },
            {
                internalType: "bytes32",
                name: "__trancheBytecodeHash",
                type: "bytes32",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "who",
                type: "address",
            },
        ],
        name: "authorize",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        name: "authorized",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "who",
                type: "address",
            },
        ],
        name: "deauthorize",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract IERC20",
                name: "_underlying",
                type: "address",
            },
            {
                internalType: "address",
                name: "_positionFrom",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "_expirationFrom",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "_positionTo",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "_expirationTo",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_amountPt",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_amountYt",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_ptExpected",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_ytExpected",
                type: "uint256",
            },
        ],
        name: "hopToTranche",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "who",
                type: "address",
            },
        ],
        name: "isAuthorized",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "isFrozen",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "owner",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "token",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "rescueTokens",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bool",
                name: "_newState",
                type: "bool",
            },
        ],
        name: "setIsFrozen",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "who",
                type: "address",
            },
        ],
        name: "setOwner",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x60c06040526000600260006101000a81548160ff0219169083151502179055503480156200002c57600080fd5b506040516200171738038062001717833981810160405281019062000052919062000172565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620000a333620000ea60201b60201c565b8173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250508060a08181525050505062000225565b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6000815190506200015581620001f1565b92915050565b6000815190506200016c816200020b565b92915050565b600080604083850312156200018657600080fd5b6000620001968582860162000144565b9250506020620001a9858286016200015b565b9150509250929050565b6000620001c082620001d1565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b620001fc81620001b3565b81146200020857600080fd5b50565b6200021681620001c7565b81146200022257600080fd5b50565b60805160601c60a0516114c96200024e6000396000610bd801526000610bb601526114c96000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80638da5cb5b116100665780638da5cb5b14610131578063b6a5d7de1461014f578063b91816111461016b578063f5019c4f1461019b578063fe9fbb80146101cc5761009e565b806313af4035146100a357806327c97fa5146100bf57806333eeb147146100db57806357376198146100f957806364eda74b14610115575b600080fd5b6100bd60048036038101906100b89190610cc3565b6101fc565b005b6100d960048036038101906100d49190610cc3565b6102cd565b005b6100e36103b6565b6040516100f0919061118c565b60405180910390f35b610113600480360381019061010e9190610cec565b6103c9565b005b61012f600480360381019061012a9190610d28565b6104ef565b005b610139610554565b6040516101469190611111565b60405180910390f35b61016960048036038101906101649190610cc3565b610578565b005b61018560048036038101906101809190610cc3565b610612565b604051610192919061118c565b60405180910390f35b6101b560048036038101906101b09190610d7a565b610632565b6040516101c3929190611270565b60405180910390f35b6101e660048036038101906101e19190610cc3565b610acf565b6040516101f3919061118c565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461028a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610281906111a7565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461035b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610352906111a7565b60405180910390fd5b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600260009054906101000a900460ff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610457576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044e906111a7565b60405180910390fd5b60008290508073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b8152600401610497929190611163565b602060405180830381600087803b1580156104b157600080fd5b505af11580156104c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e99190610d51565b50505050565b6104f833610acf565b610537576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052e906111c7565b60405180910390fd5b80600260006101000a81548160ff02191690831515021790555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610606576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105fd906111a7565b60405180910390fd5b61060f81610b25565b50565b60016020528060005260406000206000915054906101000a900460ff1681565b600080600260009054906101000a900460ff1615610685576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067c90611207565b60405180910390fd5b60006106918b8b610b7f565b9050600061069f8a8a610b7f565b90506000808911156107d6578273ffffffffffffffffffffffffffffffffffffffff166323b872dd33308c6040518463ffffffff1660e01b81526004016106e89392919061112c565b602060405180830381600087803b15801561070257600080fd5b505af1158015610716573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073a9190610d51565b508273ffffffffffffffffffffffffffffffffffffffff1663884e17f38a8d6040518363ffffffff1660e01b8152600401610776929190611247565b602060405180830381600087803b15801561079057600080fd5b505af11580156107a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c89190610e69565b816107d391906112aa565b90505b60008811156109935760008373ffffffffffffffffffffffffffffffffffffffff1663764b666c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561082757600080fd5b505afa15801561083b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085f9190610e40565b90508073ffffffffffffffffffffffffffffffffffffffff166323b872dd33308c6040518463ffffffff1660e01b815260040161089e9392919061112c565b602060405180830381600087803b1580156108b857600080fd5b505af11580156108cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f09190610d51565b5060008473ffffffffffffffffffffffffffffffffffffffff16631210aac28b8f6040518363ffffffff1660e01b815260040161092e929190611247565b6040805180830381600087803b15801561094757600080fd5b505af115801561095b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097f9190610e92565b509050808361098e91906112aa565b925050505b6000808373ffffffffffffffffffffffffffffffffffffffff166385f45c88336040518263ffffffff1660e01b81526004016109cf9190611111565b6040805180830381600087803b1580156109e857600080fd5b505af11580156109fc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a209190610e92565b91509150828110158015610a345750878110155b610a73576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6a90611227565b60405180910390fd5b88821015610ab6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aad906111e7565b60405180910390fd5b8181965096505050505050995099975050505050505050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6000808383604051602001610b95929190611097565b604051602081830303815290604052805190602001209050600060ff60f81b7f0000000000000000000000000000000000000000000000000000000000000000837f0000000000000000000000000000000000000000000000000000000000000000604051602001610c0a94939291906110c3565b6040516020818303038152906040528051906020012090508060001c9250505092915050565b600081359050610c3f81611420565b92915050565b600081359050610c5481611437565b92915050565b600081519050610c6981611437565b92915050565b600081359050610c7e8161144e565b92915050565b600081519050610c9381611465565b92915050565b600081359050610ca88161147c565b92915050565b600081519050610cbd8161147c565b92915050565b600060208284031215610cd557600080fd5b6000610ce384828501610c30565b91505092915050565b60008060408385031215610cff57600080fd5b6000610d0d85828601610c30565b9250506020610d1e85828601610c99565b9150509250929050565b600060208284031215610d3a57600080fd5b6000610d4884828501610c45565b91505092915050565b600060208284031215610d6357600080fd5b6000610d7184828501610c5a565b91505092915050565b60008060008060008060008060006101208a8c031215610d9957600080fd5b6000610da78c828d01610c6f565b9950506020610db88c828d01610c30565b9850506040610dc98c828d01610c99565b9750506060610dda8c828d01610c30565b9650506080610deb8c828d01610c99565b95505060a0610dfc8c828d01610c99565b94505060c0610e0d8c828d01610c99565b93505060e0610e1e8c828d01610c99565b925050610100610e308c828d01610c99565b9150509295985092959850929598565b600060208284031215610e5257600080fd5b6000610e6084828501610c84565b91505092915050565b600060208284031215610e7b57600080fd5b6000610e8984828501610cae565b91505092915050565b60008060408385031215610ea557600080fd5b6000610eb385828601610cae565b9250506020610ec485828601610cae565b9150509250929050565b610ed781611300565b82525050565b610eee610ee982611300565b6113a2565b82525050565b610efd81611312565b82525050565b610f14610f0f8261131e565b6113b4565b82525050565b610f2b610f268261134a565b6113be565b82525050565b6000610f3e601083611299565b91507f53656e646572206e6f74206f776e6572000000000000000000000000000000006000830152602082019050919050565b6000610f7e601583611299565b91507f53656e646572206e6f7420417574686f72697a656400000000000000000000006000830152602082019050919050565b6000610fbe601483611299565b91507f4e6f7420656e6f756768205054206d696e7465640000000000000000000000006000830152602082019050919050565b6000610ffe600f83611299565b91507f436f6e74726163742066726f7a656e00000000000000000000000000000000006000830152602082019050919050565b600061103e601483611299565b91507f4e6f7420656e6f756768205954206d696e7465640000000000000000000000006000830152602082019050919050565b61107a81611398565b82525050565b61109161108c82611398565b6113da565b82525050565b60006110a38285610edd565b6014820191506110b38284611080565b6020820191508190509392505050565b60006110cf8287610f03565b6001820191506110df8286610edd565b6014820191506110ef8285610f1a565b6020820191506110ff8284610f1a565b60208201915081905095945050505050565b60006020820190506111266000830184610ece565b92915050565b60006060820190506111416000830186610ece565b61114e6020830185610ece565b61115b6040830184611071565b949350505050565b60006040820190506111786000830185610ece565b6111856020830184611071565b9392505050565b60006020820190506111a16000830184610ef4565b92915050565b600060208201905081810360008301526111c081610f31565b9050919050565b600060208201905081810360008301526111e081610f71565b9050919050565b6000602082019050818103600083015261120081610fb1565b9050919050565b6000602082019050818103600083015261122081610ff1565b9050919050565b6000602082019050818103600083015261124081611031565b9050919050565b600060408201905061125c6000830185611071565b6112696020830184610ece565b9392505050565b60006040820190506112856000830185611071565b6112926020830184611071565b9392505050565b600082825260208201905092915050565b60006112b582611398565b91506112c083611398565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156112f5576112f46113e4565b5b828201905092915050565b600061130b82611378565b9050919050565b60008115159050919050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b6000819050919050565b600061135f82611300565b9050919050565b600061137182611300565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006113ad826113c8565b9050919050565b6000819050919050565b6000819050919050565b60006113d382611413565b9050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160601b9050919050565b61142981611300565b811461143457600080fd5b50565b61144081611312565b811461144b57600080fd5b50565b61145781611354565b811461146257600080fd5b50565b61146e81611366565b811461147957600080fd5b50565b61148581611398565b811461149057600080fd5b5056fea2646970667358221220d597ddcba96427eda315025f7a89d4e233e7b4b63d9322c13d3d2952360dd06c64736f6c63430008000033";
const isSuperArgs = (xs) => xs.length > 1;
class ZapTrancheHop__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(__trancheFactory, __trancheBytecodeHash, overrides) {
        return super.deploy(__trancheFactory, __trancheBytecodeHash, overrides || {});
    }
    getDeployTransaction(__trancheFactory, __trancheBytecodeHash, overrides) {
        return super.getDeployTransaction(__trancheFactory, __trancheBytecodeHash, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.ZapTrancheHop__factory = ZapTrancheHop__factory;
ZapTrancheHop__factory.bytecode = _bytecode;
ZapTrancheHop__factory.abi = _abi;
