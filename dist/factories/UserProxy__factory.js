"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
exports.__esModule = true;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var ethers_1 = require("ethers");
{
    UserProxy, UserProxyInterface;
}
from;
"../UserProxy";
var _abi = [
    {
        inputs: [
            {
                internalType: "contract IWETH",
                name: "_weth",
                type: "address"
            },
            {
                internalType: "address",
                name: "__trancheFactory",
                type: "address"
            },
            {
                internalType: "bytes32",
                name: "__trancheBytecodeHash",
                type: "bytes32"
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor"
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "who",
                type: "address"
            },
        ],
        name: "authorize",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address"
            },
        ],
        name: "authorized",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool"
            },
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "who",
                type: "address"
            },
        ],
        name: "deauthorize",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        inputs: [],
        name: "deprecate",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "who",
                type: "address"
            },
        ],
        name: "isAuthorized",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool"
            },
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [],
        name: "isFrozen",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool"
            },
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_amount",
                type: "uint256"
            },
            {
                internalType: "contract IERC20",
                name: "_underlying",
                type: "address"
            },
            {
                internalType: "uint256",
                name: "_expiration",
                type: "uint256"
            },
            {
                internalType: "address",
                name: "_position",
                type: "address"
            },
            {
                components: [
                    {
                        internalType: "contract IERC20Permit",
                        name: "tokenContract",
                        type: "address"
                    },
                    {
                        internalType: "address",
                        name: "who",
                        type: "address"
                    },
                    {
                        internalType: "uint256",
                        name: "amount",
                        type: "uint256"
                    },
                    {
                        internalType: "uint256",
                        name: "expiration",
                        type: "uint256"
                    },
                    {
                        internalType: "bytes32",
                        name: "r",
                        type: "bytes32"
                    },
                    {
                        internalType: "bytes32",
                        name: "s",
                        type: "bytes32"
                    },
                    {
                        internalType: "uint8",
                        name: "v",
                        type: "uint8"
                    },
                ],
                internalType: "struct UserProxy.PermitData[]",
                name: "_permitCallData",
                type: "tuple[]"
            },
        ],
        name: "mint",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256"
            },
            {
                internalType: "uint256",
                name: "",
                type: "uint256"
            },
        ],
        stateMutability: "payable",
        type: "function"
    },
    {
        inputs: [],
        name: "owner",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address"
            },
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "bool",
                name: "_newState",
                type: "bool"
            },
        ],
        name: "setIsFrozen",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "who",
                type: "address"
            },
        ],
        name: "setOwner",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        inputs: [],
        name: "weth",
        outputs: [
            {
                internalType: "contract IWETH",
                name: "",
                type: "address"
            },
        ],
        stateMutability: "view",
        type: "function"
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_expiration",
                type: "uint256"
            },
            {
                internalType: "address",
                name: "_position",
                type: "address"
            },
            {
                internalType: "uint256",
                name: "_amountPT",
                type: "uint256"
            },
            {
                internalType: "uint256",
                name: "_amountYT",
                type: "uint256"
            },
            {
                components: [
                    {
                        internalType: "contract IERC20Permit",
                        name: "tokenContract",
                        type: "address"
                    },
                    {
                        internalType: "address",
                        name: "who",
                        type: "address"
                    },
                    {
                        internalType: "uint256",
                        name: "amount",
                        type: "uint256"
                    },
                    {
                        internalType: "uint256",
                        name: "expiration",
                        type: "uint256"
                    },
                    {
                        internalType: "bytes32",
                        name: "r",
                        type: "bytes32"
                    },
                    {
                        internalType: "bytes32",
                        name: "s",
                        type: "bytes32"
                    },
                    {
                        internalType: "uint8",
                        name: "v",
                        type: "uint8"
                    },
                ],
                internalType: "struct UserProxy.PermitData[]",
                name: "_permitCallData",
                type: "tuple[]"
            },
        ],
        name: "withdrawWeth",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function"
    },
    {
        stateMutability: "payable",
        type: "receive"
    },
];
var _bytecode = "";
var isSuperArgs = function (xs) { return xs.length > 1; };
var UserProxy__factory = (function (_super) {
    __extends(UserProxy__factory, _super);
    function UserProxy__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (isSuperArgs(args)) {
            _this = _super.apply(this, args) || this;
        }
        else {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        return _this;
    }
    UserProxy__factory.prototype.deploy = function (_weth, __trancheFactory, __trancheBytecodeHash, overrides) {
        return _super.prototype.deploy.call(this, _weth, __trancheFactory, __trancheBytecodeHash, overrides || {});
    };
    UserProxy__factory.prototype.getDeployTransaction = function (_weth, __trancheFactory, __trancheBytecodeHash, overrides) {
        return _super.prototype.getDeployTransaction.call(this, _weth, __trancheFactory, __trancheBytecodeHash, overrides || {});
    };
    UserProxy__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    UserProxy__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    UserProxy__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    UserProxy__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    UserProxy__factory.bytecode = _bytecode;
    UserProxy__factory.abi = _abi;
    return UserProxy__factory;
}(ethers_1.ContractFactory));
exports.UserProxy__factory = UserProxy__factory;
