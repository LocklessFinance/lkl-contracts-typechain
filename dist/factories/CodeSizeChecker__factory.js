"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
exports.__esModule = true;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var ethers_1 = require("ethers");
{
    CodeSizeChecker,
        CodeSizeCheckerInterface,
    ;
}
from;
"../CodeSizeChecker";
var _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "which",
                type: "address"
            },
        ],
        name: "codeSize",
        outputs: [
            {
                internalType: "uint256",
                name: "ret",
                type: "uint256"
            },
        ],
        stateMutability: "view",
        type: "function"
    },
];
var _bytecode = "0x608060405234801561001057600080fd5b5061015c806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806352872cf314610030575b600080fd5b61004a60048036038101906100459190610080565b610060565b60405161005791906100b8565b60405180910390f35b6000813b9050919050565b60008135905061007a8161010f565b92915050565b60006020828403121561009257600080fd5b60006100a08482850161006b565b91505092915050565b6100b281610105565b82525050565b60006020820190506100cd60008301846100a9565b92915050565b60006100de826100e5565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b610118816100d3565b811461012357600080fd5b5056fea26469706673582212200189b9ecb83aa23987f7a20167ae345334677d6aeb037d472bf236362f9fae2b64736f6c63430008000033";
var isSuperArgs = function (xs) { return xs.length > 1; };
var CodeSizeChecker__factory = (function (_super) {
    __extends(CodeSizeChecker__factory, _super);
    function CodeSizeChecker__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (isSuperArgs(args)) {
            _this = _super.apply(this, args) || this;
        }
        else {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        return _this;
    }
    CodeSizeChecker__factory.prototype.deploy = function (overrides) {
        return _super.prototype.deploy.call(this, overrides || {});
    };
    CodeSizeChecker__factory.prototype.getDeployTransaction = function (overrides) {
        return _super.prototype.getDeployTransaction.call(this, overrides || {});
    };
    CodeSizeChecker__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    CodeSizeChecker__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    CodeSizeChecker__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    CodeSizeChecker__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    CodeSizeChecker__factory.bytecode = _bytecode;
    CodeSizeChecker__factory.abi = _abi;
    return CodeSizeChecker__factory;
}(ethers_1.ContractFactory));
exports.CodeSizeChecker__factory = CodeSizeChecker__factory;
